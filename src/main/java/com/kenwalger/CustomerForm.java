package com.kenwalger;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Binder;
import com.vaadin.event.ShortcutAction;
import com.vaadin.ui.*;
import com.vaadin.ui.declarative.Design;
import com.vaadin.ui.themes.ValoTheme;

/**
 * !! DO NOT EDIT THIS FILE !!
 * <p>
 * This class is generated by Vaadin Designer and will be overwritten.
 * <p>
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class CustomerForm extends VerticalLayout {

  private TextField firstName = new TextField("First Name");
  private TextField lastName = new TextField("Last Name");
  private TextField email = new TextField("email");
  private NativeSelect<CustomerStatus> status = new NativeSelect<>("Status");
  private DateField birthdate = new DateField("Birthday");
  private Button save = new Button("Save");
  private Button delete = new Button("Delete");

  private CustomerService service = CustomerService.getInstance();
  private Customer customer;
  private MyUI myUI;

  private Binder<Customer> binder = new Binder<>(Customer.class);

  public CustomerForm(MyUI myUI) {
    this.myUI = myUI;

    setSizeUndefined();
    HorizontalLayout buttons = new HorizontalLayout(save, delete);
    addComponents(firstName, lastName, email, status, birthdate, buttons);

    status.setItems(CustomerStatus.values());
    save.setStyleName(ValoTheme.BUTTON_PRIMARY);
    save.setClickShortcut(ShortcutAction.KeyCode.ENTER);

    binder.bindInstanceFields(this);

    save.addClickListener(e -> this.save());
    delete.addClickListener(e -> this.delete());
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
    binder.setBean(customer);

    // Show delete button for only customers already in the database
    delete.setVisible(customer.isPersisted());
    setVisible(true);
    firstName.selectAll();
  }

  private void delete() {
    service.delete(customer);
    myUI.updateList();
    setVisible(false);
  }

  private void save() {
    service.save(customer);
    myUI.updateList();
    setVisible(false);
  }
}
